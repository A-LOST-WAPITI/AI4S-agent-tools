name: Release

on:
  push:
    tags: [ 'v*' ]     # 例如 v1.2.3

permissions:
  contents: read       # 读仓库
  packages: write      # 推 GHCR

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with: {fetch-depth: 0}   # 需要完整 git 历史

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # ---------- ① 找上一个 tag ----------
    - id: prev
      run: |
        last=$(git describe --tags --abbrev=0 $(git rev-parse HEAD^) 2>/dev/null || echo '')
        echo "last=$last" >> $GITHUB_OUTPUT

    # ---------- ② diff 出「新增工具目录」 ----------
    - id: new
      run: |
        if [[ -z "${{ steps.prev.outputs.last }}" ]]; then
          echo "dirs=$(ls -1 -d servers/* | xargs -n1 basename | tr '\n' ' ')" >> $GITHUB_OUTPUT
        else
          diff=$(git diff --name-status ${{ steps.prev.outputs.last }} HEAD -- servers/ | awk '$1=="A"{print $2}' | cut -d/ -f2 | sort -u | tr '\n' ' ')
          echo "dirs=$diff" >> $GITHUB_OUTPUT
        fi

    - name: Skip when no new tools
      if: steps.new.outputs.dirs == ''
      run: echo "No NEW tool directories – skipping release."

    # ---------- ③ 构建 & 推送 ----------
    - name: Build + push only NEW tools
      if: steps.new.outputs.dirs != ''
      env:
        TAG: ${{ github.ref_name }}   # vX.Y.Z
      run: |
        for tool in ${{ steps.new.outputs.dirs }}; do
          echo "🚀 Building $tool"
          python hack/build_docker.py "$tool"
          python hack/gen_k8s.py "$tool" 50001

          dst="ghcr.io/${{ github.repository }}/$tool:${TAG}"
          docker tag "${tool}:latest" "$dst"
          docker push "$dst"
        done

    # ---------- ④ 创建 GitHub Release ----------
    - name: Create GitHub Release
      if: steps.new.outputs.dirs != ''
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true